<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:styles="clr-namespace:Material.Styles;assembly=Material.Styles"
             xmlns:regions="clr-namespace:Common.Core.Regions;assembly=Common.Core"
             xmlns:navigation="clr-namespace:Common.Resources.m3.Navigation;assembly=Common.Resources"
             xmlns:views="clr-namespace:VkPlayer.Module.Views"
             mc:Ignorable="d" d:DesignWidth="650" d:DesignHeight="600"
             x:Class="VkPlayer.Module.Views.MainView">

    <!--<Design.DataContext>
        <views:MainViewModel />
    </Design.DataContext>-->

    <Grid ColumnDefinitions="Auto, *">

        <!-- Menu -->
        <Grid Grid.Column="0" RowDefinitions="Auto, *, Auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding MenuColumnWidth}" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Icon -->
            <StackPanel Grid.Row="0"
                        Orientation="Vertical"
                        Margin="3">

                <Ellipse Margin="3,3"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Left"
                         Width="48" Height="48"
                         Stroke="{DynamicResource MaterialDesignSelection}"
                         StrokeThickness="1">
                    <Ellipse.Fill>
                        <ImageBrush Source="{Binding CurrentAccountModel.Image.Bitmap}" />
                    </Ellipse.Fill>

                    <i:Interaction.Behaviors>
                        <ia:EventTriggerBehavior EventName="PointerPressed">
                            <ia:InvokeCommandAction Command="{Binding AvatarPressedCommand}" />
                        </ia:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </Ellipse>

                <TextBlock Classes="Body2"
                           Text="{Binding CurrentAccountModel.Name}"
                           IsVisible="{Binding MenuTextIsVisible}"
                           VerticalAlignment="Center" TextTrimming="150" Margin="1,0,0,0" />
                <TextBlock Classes="Body2"
                           Text="{Binding CurrentAccountModel.Status}"
                           IsVisible="{Binding MenuTextIsVisible}"
                           VerticalAlignment="Center" TextTrimming="150" Margin="1,0,0,0" />
                <TextBlock Classes="Body2"
                           Text="{Binding CurrentAccountModel.UserId}"
                           IsVisible="{Binding MenuTextIsVisible}"
                           VerticalAlignment="Center" TextTrimming="150" Margin="1,0,0,0" />
            </StackPanel>

            <!-- Menu -->
            <ListBox Grid.Column="0" Grid.Row="1"
                     Items="{Binding NavigationMenu.ItemSource}"
                     SelectedItem="{Binding Path=NavigationMenuSelection, Mode=TwoWay}"
                     SelectedIndex="{Binding Path=MenuSelectionIndex, Mode=TwoWay}"
                     VerticalAlignment="Center">

                <ListBox.ItemTemplate>
                    <DataTemplate DataType="navigation:NavigationItem">
                        <StackPanel Spacing="3" Orientation="Horizontal">
                            <avalonia:MaterialIcon Kind="{Binding Icon.Kind}" Width="32" Height="32" />
                            <TextBlock Text="{Binding Title}"
                                       IsVisible="{Binding DataContext.MenuTextIsVisible, 
                                     RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                                       FontSize="14"
                                       Margin="16,0,0,0"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <StackPanel Grid.Column="0" Grid.Row="2"
                        Orientation="Vertical"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        Margin="5" Spacing="3">
                <!-- Settings -->
                <Button
                    Classes="Flat"
                    Content="{avalonia:MaterialIconExt Kind=Settings, Size=32}"
                    Width="32" Height="32"
                    ToolTip.Tip="Settings"
                    Command="{Binding ShowSettingsCommand}" />

                <!-- About -->
                <Button
                    Classes="Flat"
                    Content="{avalonia:MaterialIconExt Kind=Information, Size=32}"
                    Width="32" Height="32"
                    ToolTip.Tip="About"
                    Command="{Binding ShowAboutCommand}" />

                <!-- Выйти -->
                <Button
                    Classes="Flat"
                    Content="{avalonia:MaterialIconExt Kind=LogoutVariant, Size=32}"
                    Width="32" Height="32"
                    IsVisible="{Binding MenuTextIsVisible}"
                    ToolTip.Tip="Выйти" />
            </StackPanel>
        </Grid>

        <!-- Controls -->
        <Grid Grid.Column="1"
              RowDefinitions="Auto, Auto, *">

            <!-- PlayerControl -->
            <views:PlayerControlView Grid.Row="0"
                                     DataContext="{Binding PlayerContext}"
                                     Margin="5" />

            <Separator Grid.Row="1" Height="1" Margin="10, 0" Padding="0" />

            <!-- Content -->
            <styles:Card Grid.Row="2"
                         CornerRadius="16"
                         BorderThickness="1"
                         BorderBrush="{DynamicResource MaterialDesignSelection}"
                         Margin="10">
                <Panel>
                    <!-- Region -->
                    <!--<ContentControl
                        prism:RegionManager.RegionName="{x:Static regions:RegionNameService.ContentRegionName}"/>-->
                    <ContentControl
                        Content="{Binding DataContext.NavigationMenuSelection.Content, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                        DataContext="{Binding DataContext.NavigationMenuSelection.DataContext, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />

                    <!--<views:MusicListControl
                        IsVisible="{ReflectionBinding  DataContext.CurrentAudioViewIsVisible, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                        DataContext="{ReflectionBinding  DataContext.CurrentAudioViewModel, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                        -->

                    <!--
                    <views:AlbumListControl
                        IsVisible="{ReflectionBinding  DataContext.AlbumsIsVisible, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                        DataContext="{ReflectionBinding  DataContext.AlbumsViewModel, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                        -->

                    <!--<views1:AuthorizationView
                        IsVisible="{ReflectionBinding  DataContext.VkLoginIsVisible, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                        DataContext="{ReflectionBinding  VkLoginViewModel}" />-->

                    <!--<views:RepostView
                        DataContext="{ReflectionBinding  DataContext.RepostViewModel, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                        IsVisible="{ReflectionBinding  DataContext.RepostViewIsVisible,
							 RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" />-->

                    <views:ExceptionView
                        DataContext="{Binding  DataContext.ExceptionViewModel, 
                        RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                        IsVisible="{Binding  DataContext.ExceptionIsVisible,
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" />
                </Panel>
            </styles:Card>
        </Grid>

    </Grid>
</UserControl>