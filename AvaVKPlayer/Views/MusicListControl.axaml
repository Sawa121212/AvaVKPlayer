<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="450"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:converters="clr-namespace:AvaVKPlayer.Converters"
             xmlns:etc="clr-namespace:Common.Resources.LoadingControl;assembly=Common.Resources"
             xmlns:assists="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
             xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             x:Class="AvaVKPlayer.Views.MusicListControl">

    <UserControl.Resources>
        <converters:DurationConverter x:Key="durationConverter" />
    </UserControl.Resources>

    <UserControl.Styles>
        <Style Selector="TextBlock">
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="Margin" Value="0, 0, -1, 0" />
        </Style>
    </UserControl.Styles>

    <Grid RowDefinitions="Auto,*">

        <!-- Search Box-->
        <TextBox Grid.Row="0" Classes="Solo"
                 BorderBrush="{DynamicResource MaterialDesignSelection}"
                 BorderThickness="1"
                 IsVisible="{Binding SearchIsVisible, Mode=OneWay}"
                 Watermark="Поиск музыки"
                 assists:TextFieldAssist.CornerRadius="10"
                 Margin="0, 0, 0, 5">
            <TextBox.InnerLeftContent>
                <Border Height="{Binding $parent[TextBox].Height}"
                        Width="{Binding $self.Bounds.Height}">
                    <avalonia:MaterialIcon Kind="Magnify"
                                           Width="20" Height="20"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center" />
                </Border>
            </TextBox.InnerLeftContent>
        </TextBox>

        <!-- Musics -->
        <ListBox Grid.Row="1" x:Name="box"
                 SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"
                 Items="{Binding  DataCollection}"
                 AutoScrollToSelectedItem="{Binding ScrollToItem}"
                 UseLayoutRounding="True"
                 VirtualizationMode="Simple">

            <!--<ListBox.Styles>
                <StyleInclude Source="/Styles/ListBoxStyle.axaml" />
            </ListBox.Styles>-->

            <ListBox.DataTemplates>

                <DataTemplate>

                    <Grid x:Name="GridData" Opacity="1">
                        <i:Interaction.Behaviors>
                            <ia:DataTriggerBehavior Binding="{Binding  IsNotAvailable}" ComparisonCondition="Equal"
                                                    Value="True">
                                <ia:ChangePropertyAction TargetObject="GridData" PropertyName="Opacity" Value="0.6" />
                            </ia:DataTriggerBehavior>
                            <ia:DataTriggerBehavior Binding="{Binding  IsNotAvailable}" ComparisonCondition="Equal"
                                                    Value="False">
                                <ia:ChangePropertyAction TargetObject="GridData" PropertyName="Opacity" Value="1" />
                            </ia:DataTriggerBehavior>
                        </i:Interaction.Behaviors>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <DockPanel>
                            <Border IsHitTestVisible="False" VerticalAlignment="Top" CornerRadius="10" Width="50"
                                    Height="50"
                                    Margin="0,0,5,0" DockPanel.Dock="Left">
                                <Border.Background>
                                    <ImageBrush Source="{Binding Image.Bitmap}" Stretch="Uniform" />
                                </Border.Background>
                            </Border>

                            <DockPanel Margin="5" MaxWidth="{Binding $parent.ActualWidth}">
                                <DockPanel DockPanel.Dock="Top"
                                           MaxWidth="{Binding $parent.ActualWidth}">
                                    <TextBlock IsHitTestVisible="False"
                                               TextTrimming="WordEllipsis" FontSize="14"
                                               Text="{Binding Title}" DockPanel.Dock="Left" />
                                    <TextBlock IsHitTestVisible="false"
                                               TextTrimming="WordEllipsis" FontSize="14"
                                               Text="{Binding Subtitle}" Margin="5,0,0,0" DockPanel.Dock="Right">
                                        <TextBlock.Styles>
                                            <Style Selector="TextBlock">
                                                <Setter Property="Foreground" Value="#464646" />
                                            </Style>
                                        </TextBlock.Styles>
                                    </TextBlock>
                                </DockPanel>

                                <StackPanel Margin="0,5" DockPanel.Dock="Bottom">
                                    <TextBlock x:Name="artist" IsHitTestVisible="True" TextTrimming="WordEllipsis"
                                               FontSize="14"
                                               Text="{Binding Artist}">

                                        <i:Interaction.Behaviors>
                                            <ia:EventTriggerBehavior EventName="PointerPressed">
                                                <ia:CallMethodAction
                                                    TargetObject="{Binding DataContext , 
                                                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                                    MethodName="ArtistClicked" />
                                            </ia:EventTriggerBehavior>

                                        </i:Interaction.Behaviors>

                                        <TextBlock.Styles>
                                            <Style Selector="TextBlock">
                                                <Setter Property="Foreground" Value="#737272" />
                                            </Style>
                                            <Style Selector="TextBlock:pointerover">
                                                <Setter Property="Foreground" Value="{DynamicResource ControlsColor}" />

                                                <Setter Property="Cursor" Value="Hand" />
                                            </Style>
                                        </TextBlock.Styles>
                                    </TextBlock>

                                </StackPanel>
                            </DockPanel>
                        </DockPanel>

                        <StackPanel Grid.Column="1" Margin="10,0"
                                    Spacing="5" Orientation="Horizontal">

                            <!-- Download -->
                            <Button Classes="Flat"
                                    IsVisible="{Binding DataContext.AudioListButtons.AudioDownloadIsVisible, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}">
                                <StackPanel Orientation="Horizontal">
                                    <avalonia:MaterialIcon Kind="Download" Width="24" Height="24" />

                                    <TextBlock Margin="5,0,0,0" Width="40">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{} {0}%">
                                                <Binding Path="DownloadPercent" />
                                            </MultiBinding>
                                        </TextBlock.Text>

                                        <i:Interaction.Behaviors>

                                            <ia:DataTriggerBehavior Binding="{Binding DownloadPercent}"
                                                                    ComparisonCondition="Equal" Value="0">
                                                <ia:ChangePropertyAction PropertyName="IsVisible" Value="False" />
                                            </ia:DataTriggerBehavior>

                                            <ia:DataTriggerBehavior Binding="{Binding DownloadPercent}"
                                                                    ComparisonCondition="NotEqual" Value="0">
                                                <ia:ChangePropertyAction PropertyName="IsVisible" Value="True" />
                                            </ia:DataTriggerBehavior>
                                        </i:Interaction.Behaviors>
                                    </TextBlock>
                                </StackPanel>

                                <i:Interaction.Behaviors>
                                    <ia:EventTriggerBehavior EventName="Click">
                                        <ia:InvokeCommandAction
                                            CommandParameter="{Binding }"
                                            Command="{Binding DataContext.AudioListButtons.AudioDownloadCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}" />
                                    </ia:EventTriggerBehavior>
                                </i:Interaction.Behaviors>
                            </Button>

                            <!-- Repost -->
                            <Button Classes="Flat"
                                    IsVisible="{Binding DataContext.AudioListButtons.AudioRepostIsVisible, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}"
                                    Content="{avalonia:MaterialIconExt Kind=Share, Size=24}"
                                    CommandParameter="{Binding .}"
                                    Command="{Binding DataContext.AudioListButtons.AudioRepostCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}" />

                            <!-- Add -->
                            <Button Classes="Flat"
                                    IsVisible="{Binding DataContext.AudioListButtons.AudioAddIsVisible, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}"
                                    Content="{avalonia:MaterialIconExt Kind=PlaylistPlus, Size=24}"
                                    CommandParameter="{Binding }"
                                    Command="{Binding DataContext.AudioListButtons.AudioAddCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}"
                                    ToolTip.Tip="Add Audio" />

                            <!-- AddToAlbum -->
                            <Button Classes="Flat"
                                    IsVisible="{Binding DataContext.AudioListButtons.AudioAddToAlbumIsVisible, 
                                    RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}"
                                    Content="{avalonia:MaterialIconExt Kind=BookPlus, Size=24}"
                                    CommandParameter="{Binding }"
                                    Command="{Binding DataContext.AudioListButtons.AudioAddToAlbumCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}"
                                    ToolTip.Tip="Add Audio To Album" />

                            <!-- OpenText -->
                            <Button x:Name="OpenTextBTN" Classes="Flat"
                                    IsVisible="{Binding LyricsButtonIsVisible}">
                                <i:Interaction.Behaviors>
                                    <ia:EventTriggerBehavior EventName="Click">
                                        <ia:InvokeCommandAction
                                            CommandParameter="{Binding }"
                                            Command="{Binding DataContext.AudioListButtons.AudioOpenLyricsCommand,
                                              RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}" />
                                    </ia:EventTriggerBehavior>
                                </i:Interaction.Behaviors>

                                <Grid>
                                    <avalonia:MaterialIcon Kind="FormatTextVariant"
                                                           Width="24" Height="24" />

                                    <Popup IsOpen="{Binding IsVisible,FallbackValue=False}"
                                           OverlayDismissEventPassThrough="False"
                                           DataContext="{Binding LyricsViewModel}"
                                           MaxHeight="400"
                                           Topmost="False"
                                           IsLightDismissEnabled="True"
                                           WindowManagerAddShadowHint="False"
                                           PlacementAnchor="Bottom"
                                           PlacementGravity="Bottom"
                                           PlacementMode="AnchorAndGravity">
                                        <Border x:Name="LyricsScrollBorder"
                                                PointerLeave="LyricsScrollBorder_OnPointerLeave"
                                                CornerRadius="16"
                                                BorderThickness="1"
                                                BorderBrush="{DynamicResource MaterialDesignSelection}">

                                            <ScrollViewer x:Name="LyricsScroll"
                                                          Margin="10">
                                                <TextBox IsReadOnly="True"
                                                         BorderBrush="{DynamicResource MaterialDesignSelection}"
                                                         Text="{Binding Text}"
                                                         Margin="5" />
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Button>

                            <!-- Remove -->
                            <Button Classes="Flat"
                                    IsVisible="{Binding DataContext.AudioListButtons.AudioRemoveIsVisible,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}"
                                    Content="{avalonia:MaterialIconExt Kind=Delete, Size=24}"
                                    CommandParameter="{Binding .}"
                                    Command="{Binding DataContext.AudioListButtons.AudioRemoveCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type UserControl}}}" />


                        </StackPanel>

                        <TextBlock Width="60" VerticalAlignment="Center" Grid.Column="2"
                                   Text="{Binding Duration, Converter={StaticResource durationConverter}}" />


                    </Grid>
                </DataTemplate>
            </ListBox.DataTemplates>
        </ListBox>

        <etc:LoadingControl Grid.Row="1"
                            VerticalContentAlignment="Center"
                            IsVisible="{Binding IsLoading}" />
    </Grid>
</UserControl>